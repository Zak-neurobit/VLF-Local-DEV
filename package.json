{
  "name": "vasquez-law-website",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@10.13.1",
  "scripts": {
    "dev": "node scripts/start-dev-simple.js",
    "dev:next": "next dev",
    "dev:socket": "pnpm run build:socket && node scripts/dev-server.js",
    "dev:full": "pnpm run build:socket && node scripts/dev-server.js",
    "start:production": "node scripts/master-startup.js",
    "verify:deployment": "tsx scripts/verify-deployment.ts",
    "build:socket": "tsc --project tsconfig.socket.json && mkdir -p dist/lib/socket && cp src/lib/socket/server-setup.js dist/lib/socket/ && cp dist/lib/socket/server.js dist/lib/socket/ 2>/dev/null || true",
    "build": "echo \"BUILD STARTED $(date)\" && pnpm exec prisma generate && pnpm run setup:partytown && NODE_OPTIONS=\"--max-old-space-size=8192\" next build",
    "build:netlify": "echo \"NETLIFY BUILD STARTED\" && echo \"Memory: $NODE_OPTIONS\" && node scripts/handle-api-routes.js backup && pnpm exec prisma generate && pnpm run setup:partytown && NETLIFY=true next build && node scripts/handle-api-routes.js restore",
    "build:minimal": "echo \"MINIMAL BUILD STARTED\" && node scripts/handle-api-routes.js backup && NETLIFY=true next build",
    "build:simple": "node scripts/prepare-netlify-build.js && echo \"SIMPLE BUILD STARTED\" && node scripts/handle-api-routes.js backup && node scripts/use-simple-config.js && node scripts/prepare-static-routes.js && NETLIFY=true next build && node scripts/restore-config.js",
    "netlify": "netlify",
    "build:vercel": "node build-override.js && pnpm exec prisma generate && pnpm run setup:partytown && NODE_OPTIONS='--max-old-space-size=8192' next build",
    "build:optimized": "pnpm exec prisma generate && pnpm run setup:partytown && node scripts/optimized-build.js",
    "build:production": "pnpm exec prisma generate && pnpm run setup:partytown && NODE_OPTIONS='--max-old-space-size=4096' BUILD_TIME=true next build --config next.config.production.js",
    "setup:partytown": "node scripts/setup-partytown.js",
    "build:all": "node scripts/build-all-pages.js",
    "build:complete": "node scripts/build-complete.js",
    "validate:env": "tsx scripts/validate-env.ts",
    "setup:env": "node scripts/setup-environment.js",
    "start": "next start",
    "start:next": "next start",
    "lint": "next lint && eslint . --ext .ts,.tsx",
    "lint:fix": "next lint --fix && eslint . --ext .ts,.tsx --fix",
    "format": "prettier --write .",
    "type-check": "tsc --noEmit",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:visual": "playwright test --grep @visual",
    "test:email": "tsx scripts/test-apis.ts --email-only",
    "analyze": "ANALYZE=true next build",
    "analyze:bundle": "ANALYZE=true next build && npx serve@latest .next/analyze",
    "security-audit": "pnpm audit --audit-level=moderate",
    "pre-commit": "pnpm run lint && pnpm run type-check && pnpm test",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:prod": "prisma migrate deploy",
    "prisma:seed": "ts-node prisma/seed.ts",
    "setup:cloud-db": "node scripts/setup-cloud-database.js",
    "setup:db": "prisma db push && prisma generate",
    "db:push": "prisma db push",
    "db:seed": "prisma db seed",
    "db:test": "ts-node scripts/test-db-connection.ts",
    "db:health": "curl -s http://localhost:3000/api/health/db | jq",
    "seo:agent": "ts-node scripts/start-seo-agent.ts",
    "seo:automation": "tsx scripts/start-seo-automation.ts",
    "import:content": "ts-node scripts/import-content.ts",
    "import:vasquez": "ts-node scripts/import-vasquez-site.ts",
    "postinstall": "pnpm exec prisma generate && node scripts/fix-winston-dependencies-pnpm.js && node scripts/patch-pdf-parse.js",
    "preinstall": "npx only-allow pnpm",
    "setup:full-stack": "ts-node scripts/setup-full-stack.ts",
    "sitemap:generate": "tsx scripts/generate-complete-sitemaps.ts",
    "sitemap:monitor": "tsx src/scripts/sitemap-monitor.ts",
    "sitemap:check": "tsx scripts/check-sitemap-coverage.ts",
    "sitemap:validate": "tsx scripts/validate-sitemap-totals.ts",
    "sitemap:count": "tsx scripts/count-sitemap-urls.ts",
    "sitemap:missing": "tsx scripts/generate-missing-translations.ts",
    "sitemap:full": "pnpm run sitemap:generate && pnpm run sitemap:validate",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "agents:start": "ts-node scripts/start-all-agents.js",
    "crews:start": "tsx scripts/crewai-startup-system.ts",
    "crews:start:dev": "tsx --watch scripts/crewai-startup-system.ts",
    "crews:launch": "tsx scripts/launch-autonomous-system.ts",
    "crews:launch:background": "nohup tsx scripts/launch-autonomous-system.ts > logs/crews.log 2>&1 &",
    "clean": "rm -rf .next .next.old dist .swc *.log *.backup *.bak tsconfig.tsbuildinfo",
    "clean:all": "pnpm run clean && rm -rf node_modules pnpm-lock.yaml",
    "clean:logs": "rm -f *.log logs/*.log dev-output.log dev-server.log server.log",
    "clean:build": "rm -rf .next .next.old dist .swc tsconfig.tsbuildinfo",
    "clean:temp": "rm -f *.tmp *.backup *.bak *.orig && rm -rf .temp temp tmp",
    "crews:demo": "tsx scripts/demo-crews-working.ts",
    "fix:dynamic": "tsx scripts/fix-dynamic-server-usage.ts",
    "verify:dynamic": "tsx scripts/verify-dynamic-fixes.ts",
    "crews:simple": "tsx scripts/simple-crew-startup.ts",
    "validate-env": "node scripts/validate-env.js",
    "deploy": "./scripts/deploy.sh",
    "deploy:trigger": "tsx scripts/trigger-vercel-deployment.ts",
    "deploy:api": "tsx scripts/trigger-vercel-deployment.ts --api",
    "deploy:hook": "tsx scripts/trigger-vercel-deployment.ts --hook",
    "deploy:direct": "./scripts/deploy-direct.sh",
    "setup:ga": "node scripts/setup-google-analytics.js",
    "test:performance": "node scripts/performance-test.js",
    "audit:performance": "node scripts/performance-audit.js",
    "setup:apis": "tsx scripts/setup-apis.ts",
    "setup:crewai-agents": "tsx scripts/setup-crewai-agents.ts",
    "test:apis": "tsx scripts/test-apis.ts",
    "test:db": "tsx scripts/test-apis.ts --db-only",
    "news:monitor": "tsx scripts/start-news-monitor.ts",
    "news:monitor:dev": "tsx --watch scripts/start-news-monitor.ts",
    "news:monitor:background": "nohup tsx scripts/start-news-monitor.ts > logs/news-monitor.log 2>&1 &",
    "test:redis": "tsx scripts/test-apis.ts --redis-only",
    "test:redis:connection": "tsx scripts/test-redis-connection.ts",
    "test:openai": "tsx scripts/test-apis.ts --openai-only",
    "test:ghl": "tsx scripts/test-apis.ts --ghl-only",
    "check:apis": "tsx scripts/check-api-status.ts",
    "fix:winston": "node scripts/fix-winston-dependencies.js",
    "diagnose:winston": "node scripts/diagnose-winston.js",
    "prepare": "node -e \"if (process.env.NODE_ENV !== 'production' && !process.env.CI) { require('child_process').execSync('husky', {stdio: 'inherit'}) }\""
  },
  "dependencies": {
    "@ai-sdk/openai": "^1.3.22",
    "@builder.io/partytown": "^0.10.3",
    "@bull-board/api": "^6.11.2",
    "@bull-board/express": "^6.11.2",
    "@emotion/is-prop-valid": "^1.3.1",
    "@googlemaps/js-api-loader": "^1.16.10",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^3.10.0",
    "@langchain/core": "^0.3.61",
    "@langchain/openai": "^0.5.16",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.203.0",
    "@opentelemetry/exporter-prometheus": "^0.203.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/instrumentation-fs": "^0.23.0",
    "@opentelemetry/instrumentation-http": "^0.203.0",
    "@opentelemetry/propagator-b3": "^2.0.1",
    "@opentelemetry/propagator-jaeger": "^2.0.1",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@prisma/client": "^6.12.0",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@react-pdf/renderer": "^4.3.0",
    "@react-spring/web": "^10.0.1",
    "@react-three/drei": "^10.6.0",
    "@react-three/fiber": "^9.2.0",
    "@sentry/nextjs": "^8.55.0",
    "@tailwindcss/forms": "^0.5.9",
    "@tailwindcss/typography": "^0.5.15",
    "@types/bcryptjs": "^2.4.6",
    "@types/cron": "^2.0.1",
    "@types/node": "^20.10.0",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.17",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/rss": "^0.0.32",
    "@types/three": "^0.177.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.16.0",
    "@typescript-eslint/parser": "^6.16.0",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "ai": "^4.3.16",
    "argon2": "^0.43.1",
    "autoprefixer": "^10.4.16",
    "axios": "^1.11.0",
    "babel-plugin-react-compiler": "^19.1.0-rc.2",
    "bcryptjs": "^2.4.3",
    "bull": "^4.16.5",
    "bullmq": "^5.56.2",
    "canvas-confetti": "^1.9.3",
    "chalk": "^5.4.1",
    "cheerio": "^1.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "critters": "^0.0.23",
    "cron": "^3.1.6",
    "date-fns": "^3.6.0",
    "dotenv": "^17.0.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.30",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "express": "^5.1.0",
    "fast-xml-parser": "^5.2.5",
    "framer-motion": "^12.19.2",
    "googleapis": "^129.0.0",
    "gray-matter": "^4.0.3",
    "gsap": "^3.13.0",
    "handlebars": "^4.7.8",
    "helmet": "^8.1.0",
    "i18next": "^25.2.1",
    "i18next-browser-languagedetector": "^8.2.0",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "ky": "^1.8.2",
    "logform": "^2.7.0",
    "lottie-react": "^2.4.1",
    "lucide-react": "^0.522.0",
    "million": "^3.1.11",
    "moment": "^2.30.1",
    "neverthrow": "^8.2.0",
    "next": "^15.4.4",
    "next-auth": "^4.24.5",
    "node-cron": "^4.2.0",
    "nodemailer": "^6.9.8",
    "oauth-1.0a": "^2.2.6",
    "openai": "^4.24.0",
    "p-limit": "^6.2.0",
    "p-retry": "^6.2.1",
    "pdf-lib": "^1.17.1",
    "pdf-parse": "^1.1.1",
    "pg": "^8.16.2",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "postcss": "^8.4.32",
    "puppeteer": "^24.14.0",
    "react": "^19.1.0",
    "react-compiler-runtime": "^19.1.0-rc.2",
    "react-countup": "^6.5.3",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.59.0",
    "react-hot-toast": "^2.5.2",
    "react-i18next": "^14.1.3",
    "react-icons": "^5.5.0",
    "react-intersection-observer": "^9.16.0",
    "react-is": "^19.1.0",
    "recharts": "^3.1.0",
    "redis": "^5.5.6",
    "remark": "^15.0.1",
    "remark-html": "^16.0.1",
    "rss": "^1.2.2",
    "rss-parser": "^3.13.0",
    "schema-dts": "^1.1.5",
    "socket.io": "^4.6.0",
    "socket.io-client": "^4.8.1",
    "sonner": "^2.0.6",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.17",
    "three": "^0.170.0",
    "triple-beam": "^1.3.0",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3",
    "uuid": "^11.1.0",
    "web-vitals": "^5.0.3",
    "winston": "^3.17.0",
    "winston-transport": "^4.9.0",
    "zod": "^3.25.76",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@playwright/test": "^1.40.0",
    "@testing-library/jest-dom": "^6.1.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/argon2": "^0.14.1",
    "@types/bull": "^3.15.9",
    "@types/canvas-confetti": "^1.9.0",
    "@types/express": "^5.0.3",
    "@types/google.maps": "^3.58.1",
    "@types/handlebars": "^4.0.40",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^2.1.8",
    "@vitest/ui": "^2.1.8",
    "axe-core": "^4.8.0",
    "babel-plugin-react-compiler": "^19.1.0-rc.2",
    "cssnano": "^7.0.7",
    "eslint-plugin-complexity": "^1.0.2",
    "fs-extra": "^11.3.0",
    "glob": "^11.0.0",
    "husky": "^9.1.7",
    "inquirer": "^12.7.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.2",
    "lint-staged": "^16.1.2",
    "netlify-cli": "^23.0.0",
    "node-fetch": "^2.7.0",
    "prettier": "^3.1.0",
    "prisma": "^6.12.0",
    "terser-webpack-plugin": "^5.3.10",
    "ts-node": "^10.9.2",
    "vercel": "^32.7.2",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^2.1.8",
    "webpack-bundle-analyzer": "^4.10.1"
  },
  "prisma": {
    "seed": "ts-node --compiler-options {\"module\":\"CommonJS\"} prisma/seed.ts"
  },
  "overrides": {
    "path-to-regexp": "^6.3.0",
    "esbuild": "^0.25.8",
    "undici": "^5.29.0",
    "semver": "^7.6.0",
    "debug": "^4.3.1",
    "tar": "^6.2.1"
  }
}
