name: Validate Environment Variables

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file with test values
        run: |
          cat > .env.local << EOF
          NODE_ENV=test
          NEXT_PUBLIC_APP_URL=http://localhost:3000
          DATABASE_URL=postgresql://test:test@localhost:5432/test
          NEXTAUTH_URL=http://localhost:3000
          NEXTAUTH_SECRET=test-secret-key-that-is-at-least-32-characters-long
          OPENAI_API_KEY=sk-test-key-for-validation-only
          SKIP_ENV_VALIDATION=false
          EOF

      - name: Validate environment variables
        run: npm run validate:env

      - name: Test build process
        run: |
          # Set minimal env vars for build test
          export DATABASE_URL=postgresql://test:test@localhost:5432/test
          export NEXTAUTH_SECRET=test-secret-key-that-is-at-least-32-characters-long
          export OPENAI_API_KEY=sk-test-key-for-validation-only
          export NEXT_PUBLIC_APP_URL=http://localhost:3000
          export NEXTAUTH_URL=http://localhost:3000

          # Test that build would fail without proper env vars
          npm run build:socket || true

      - name: Check for .env files in repository
        run: |
          # Ensure no .env files are committed
          if find . -name ".env*" -not -name ".env.example" -not -name ".env*.template" -not -path "./node_modules/*" -not -path "./.git/*" | grep -q .; then
            echo "❌ Found .env files in repository!"
            find . -name ".env*" -not -name ".env.example" -not -name ".env*.template" -not -path "./node_modules/*" -not -path "./.git/*"
            exit 1
          else
            echo "✅ No .env files found in repository"
          fi
